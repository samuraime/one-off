{"version":3,"sources":["pages/KGe/KGe.module.css","pages/KGe/KGe.js","pages/Volume/Volume.js","pages/PlayerRecorder/PlayerRecorder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","KGe","useState","value","setValue","mids","setMids","loading","setLoading","className","s","form","noValidate","autoComplete","onSubmit","e","preventDefault","fetch","process","method","headers","body","JSON","stringify","then","res","json","array","csv","length","Object","keys","join","map","row","entries","entry","filename","data","a","document","createElement","objectURL","URL","createObjectURL","href","download","click","revokeObjectURL","saveAs","Blob","type","catch","error","alert","message","finally","Typography","variant","TextField","label","multiline","fullWidth","onChange","target","split","string","matched","match","filter","Boolean","placeholder","margin","helperText","Button","color","disabled","getImage","url","Promise","resolve","reject","img","Image","src","onload","onerror","getDataURL","file","reader","FileReader","result","readAsDataURL","getVolumeValue","getCandidateRows","getControls","getValue","y","context","getImageData","width","console","log","slice","candidates","i","offset","push","getColorAt","index","b","isNearLeft","middleColor","leftColor","rightColor","ps","firstIndex","points","left","right","lastIndex","point","Math","floor","getSeperatedPoints","total","start","end","controls","center","midX","height","candidateRows","image","naturalWidth","naturalHeight","canvas","getContext","drawImage","VolumePage","handleChange","event","Array","from","files","multiple","allowCodes","App","videoRef","useRef","source","setSource","records","setRecords","currentTime","setCurrentTime","useEffect","video","current","keydownHandler","includes","code","codeIndex","findIndex","newRecords","shiftKey","update","$splice","$push","addEventListener","removeEventListener","currentTimeHandler","rows","useMemo","maxLength","reduce","list","ref","_","key","rowIndex","columnIndex","accept","exact","path","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.900f4a0b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"KGe_form__2BZIL\",\"row\":\"KGe_row__1HZPb\"};","import React, { useState } from 'react';\nimport { Button, TextField, Typography } from '@material-ui/core';\nimport s from './KGe.module.css';\n\nfunction getMids(text) {\n  return text\n    .split('\\n')\n    .map(string => {\n      const matched = string.match(/[?&]mid=([^?&]+)/);\n      return matched ? matched[1] : false;\n    })\n    .filter(Boolean);\n}\n\nfunction getCSV(array) {\n  if (!array.length) {\n    return '';\n  }\n\n  const header = Object.keys(array[0]).join(',') + '\\n';\n  const body = array\n    .map(row =>\n      Object.entries(row)\n        .map(entry => entry[1])\n        .join(',')\n    )\n    .join('\\n');\n\n  return header + body;\n}\n\nfunction saveAs(filename, data) {\n  const a = document.createElement('a');\n  const objectURL = URL.createObjectURL(data);\n  a.href = objectURL;\n  a.download = filename;\n  a.click();\n  URL.revokeObjectURL(objectURL);\n}\n\nfunction KGe() {\n  const [value, setValue] = useState('');\n  const [mids, setMids] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const handleChange = e => {\n    const mids = getMids(e.target.value);\n    setValue(e.target.value);\n    setMids(mids);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setLoading(true);\n\n    fetch(`${process.env.REACT_APP_API_HOST}/kg`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify({ mids }),\n    })\n      .then(res => res.json())\n      .then(body => {\n        const csv = getCSV(body);\n        const blob = new Blob([csv], { type: 'text/plain' });\n        saveAs('kg.csv', blob);\n      })\n      .catch(error => {\n        alert(error.message);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  return (\n    <form\n      className={s.form}\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={handleSubmit}\n    >\n      <Typography variant=\"h5\">Get K歌 Rank Detail</Typography>\n      <TextField\n        className={s.row}\n        label=\"URLs\"\n        multiline\n        fullWidth\n        value={value}\n        onChange={handleChange}\n        placeholder=\"example: https://kg.qq.com/accompanydetail/index.html?mid=000IsIQC1S3E6A\"\n        margin=\"normal\"\n        helperText={`valid URLs: ${mids.length}`}\n      />\n      <Button\n        className={s.row}\n        variant=\"contained\"\n        color=\"primary\"\n        type=\"submit\"\n        disabled={loading}\n      >\n        Submit\n      </Button>\n    </form>\n  );\n}\n\nexport default KGe;\n","import React from 'react';\n\nfunction getImage(url) {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.src = url;\n    img.onload = () => {\n      resolve(img);\n    };\n    img.onerror = error => {\n      reject(error);\n    };\n  });\n}\n\nfunction getDataURL(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => {\n      resolve(reader.result);\n    };\n    reader.onerror = error => {\n      reject(error);\n    };\n    reader.readAsDataURL(file);\n  });\n}\n\nasync function getVolumeValue(file) {\n  const url = await getDataURL(file);\n  const image = await getImage(url);\n  const { naturalWidth: width, naturalHeight: height } = image;\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  const context = canvas.getContext('2d');\n  context.drawImage(image, 0, 0);\n\n  function getCandidateRows() {\n    const midX = Math.floor(width / 2);\n    const data = context.getImageData(midX, 0, 1, height).data;\n    const candidateRows = [];\n    for (let i = 0; i < height; i++) {\n      const offset = i * 4;\n      // red: #ff5555, #f05044, gray: #2b2b2b\n      if (\n        (data[offset] === 0xff &&\n          data[offset + 1] === 0x55 &&\n          data[offset + 2] === 0x55) ||\n        (data[offset] === 0xf0 &&\n          data[offset + 1] === 0x50 &&\n          data[offset + 2] === 0x44) ||\n        (data[offset] === 0x2b &&\n          data[offset + 1] === 0x2b &&\n          data[offset + 2] === 0x2b)\n      ) {\n        candidateRows.push(i);\n      }\n    }\n\n    return candidateRows;\n  }\n\n  function getControls(candidates) {\n    let start = null;\n    let end = 0;\n    const controls = [];\n    const limit = 3;\n\n    for (let i in candidates) {\n      if (candidates[end + 1] !== candidates[i]) {\n        if (start !== null) {\n          const center = Math.floor((end + start) / 2);\n          controls.push(candidates[center]);\n          if (controls.length === limit) {\n            break;\n          }\n        }\n\n        start = i;\n        end = i;\n      } else {\n        end = i;\n      }\n    }\n\n    return controls;\n  }\n\n  function getValue(y) {\n    const data = context.getImageData(0, y, width, 1).data;\n\n    console.log(data.slice(345 * 4, 350 * 4));\n\n    const candidates = [];\n    for (let i = 0; i < width; i++) {\n      const offset = i * 4;\n      // red: #ff5555, #f05044, gray: #2b2b2b, bg: #131313\n      if (\n        (data[offset] === 0xff &&\n          data[offset + 1] === 0x55 &&\n          data[offset + 2] === 0x55) ||\n        (data[offset] === 0xf0 &&\n          data[offset + 1] === 0x50 &&\n          data[offset + 2] === 0x44) ||\n        (data[offset] === 0x2b &&\n          data[offset + 1] === 0x2b &&\n          data[offset + 2] === 0x2b)\n      ) {\n        candidates.push(i);\n      }\n    }\n\n    // function isSameColor(leftIndex, rightIndex) {\n    //   const l = leftIndex * 4;\n    //   const r = rightIndex * 4;\n    //   return (\n    //     data[l] === data[r] &&\n    //     data[l + 1] === data[r + 1] &&\n    //     data[l + 2] === data[r + 2]\n    //   );\n    // }\n\n    function getColorAt(index) {\n      return data.slice(index * 4, (index + 1) * 4);\n    }\n\n    function length(a, b) {\n      return (a[0] - b[0]) ** 2 + (a[1] - b[1]) ** 2 + (a[2] - b[2]) ** 2;\n    }\n\n    function isNearLeft(middleColor, leftColor, rightColor) {\n      return length(middleColor, leftColor) < length(middleColor, rightColor);\n    }\n\n    function getSeperatedPoint(left, right) {\n      return Math.floor((left + right) / 2);\n    }\n\n    function getSeperatedPoints() {\n      // |---------|-|-----|\n      const firstIndex = candidates[0];\n      const points = [firstIndex];\n      // to start, |---------------\n      for (let i = firstIndex - 1; i > 0; i--) {\n        if (\n          !isNearLeft(getColorAt(i), [0x13, 0x13, 0x13], getColorAt(firstIndex))\n        ) {\n          break;\n        }\n        points[0] = i;\n      }\n      // ---------|-|-----\n      // to right\n      const lastIndex = candidates[candidates.length - 1];\n      // for (let i = candidates[0]; i < lastIndex; i++) {\n      //   if (!isSameColor(i, i + 1)) {\n      //     const point = getSeperatedPoint(i, i + 1);\n      //     points.push(point);\n      //   }\n      // }\n      for (let i = 0; i < candidates.length - 1; i++) {\n        if (candidates[i] + 1 !== candidates[i + 1]) {\n          const point = getSeperatedPoint(candidates[i], candidates[i + 1]);\n          points.push(point);\n        }\n      }\n      // to end, ---------------|\n      points.push(lastIndex);\n      for (let i = lastIndex + 1; i < width - 1; i++) {\n        if (\n          !isNearLeft(getColorAt(i), getColorAt(lastIndex), [0x13, 0x13, 0x13])\n        ) {\n          points[points.length - 1] = i - 1;\n          break;\n        }\n      }\n\n      console.log(candidates);\n      console.log(points);\n\n      return points;\n    }\n\n    const ps = getSeperatedPoints();\n    const total = ps[3] - ps[0] - ps[2] + ps[1];\n    const current = ps[1] - ps[0];\n\n    return current / total;\n  }\n\n  const candidateRows = getCandidateRows();\n  const controls = getControls(candidateRows);\n  console.log(controls);\n  const result = controls.map(getValue);\n  console.log(result);\n}\n\nexport default function VolumePage() {\n  const handleChange = async event => {\n    const files = Array.from(event.target.files);\n    getVolumeValue(files[0]);\n  };\n\n  return <input type=\"file\" multiple onChange={handleChange} />;\n}\n","import React, { useState, useRef, useEffect, useMemo } from 'react';\nimport update from 'immutability-helper';\nimport './PlayerRecorder.css';\n\nconst allowCodes = ['Digit1', 'Digit2', 'Digit3', 'Digit4', 'Digit5', 'Digit6'];\n\nfunction App() {\n  const videoRef = useRef(null);\n  const [source, setSource] = useState(null);\n  const [records, setRecords] = useState([[], [], [], [], [], []]);\n  const [currentTime, setCurrentTime] = useState(0);\n\n  useEffect(() => {\n    const video = videoRef.current;\n\n    const keydownHandler = event => {\n      const progressCodes = ['KeyD', 'KeyF'];\n      if (progressCodes.includes(event.code)) {\n        video.currentTime += ((event.code === 'KeyF' ? 1 : -1) * 1) / 24;\n        return;\n      }\n\n      const codeIndex = allowCodes.findIndex(code => code === event.code);\n      if (codeIndex === -1) {\n        return;\n      }\n\n      const newRecords = event.shiftKey\n        ? update(records, {\n            [codeIndex]: {\n              $splice: [[records[codeIndex].length - 1, 1]],\n            },\n          })\n        : update(records, {\n            [codeIndex]: {\n              $push: [video.currentTime],\n            },\n          });\n      setRecords(newRecords);\n    };\n    document.addEventListener('keydown', keydownHandler);\n\n    return () => {\n      document.removeEventListener('keydown', keydownHandler);\n    };\n  });\n\n  useEffect(() => {\n    const video = videoRef.current;\n    const currentTimeHandler = () => {\n      setCurrentTime(video.currentTime);\n    };\n    video.addEventListener('timeupdate', currentTimeHandler);\n\n    return () => {\n      video.removeEventListener('timeupdate', currentTimeHandler);\n    };\n  });\n\n  const handleVideoChange = e => {\n    if (!e.target.files[0]) {\n      return;\n    }\n    URL.revokeObjectURL(source);\n    const url = URL.createObjectURL(e.target.files[0]);\n    setSource(url);\n    videoRef.current.currentTime = 0;\n  };\n\n  const rows = useMemo(() => {\n    const maxLength = records.reduce((length, list) => {\n      return list.length > length ? list.length : length;\n    }, 0);\n    return Array.from({ length: maxLength });\n  }, [records]);\n\n  return (\n    <div className=\"App\">\n      <video ref={videoRef} controls src={source} />\n      {videoRef.current && !!currentTime && (\n        <div className=\"video-current-time\">Current: {currentTime}</div>\n      )}\n      <table className=\"record-panel\">\n        <thead>\n          <tr>\n            {records.map((_, index) => (\n              <th key={index}>{index + 1}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {rows.map((_, rowIndex) => (\n            <tr key={rowIndex}>\n              {allowCodes.map((_, columnIndex) => (\n                <td key={columnIndex}>{records[columnIndex][rowIndex]}</td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <footer>\n        <input type=\"file\" accept=\"video/*\" onChange={handleVideoChange} />\n        <span>F: 前进</span>\n        <span>D: 后退</span>\n        <span>1~6: 记录</span>\n        <span>1~6 + Shift: 撤销记录</span>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport KGe from './pages/KGe';\nimport Volume from './pages/Volume';\nimport PlayerRecorder from './pages/PlayerRecorder';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Volume />\n        </Route>\n        <Route path=\"/kge\">\n          <KGe />\n        </Route>\n        <Route path=\"/volume\">\n          <Volume />\n        </Route>\n        <Route path=\"/player\">\n          <PlayerRecorder />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}